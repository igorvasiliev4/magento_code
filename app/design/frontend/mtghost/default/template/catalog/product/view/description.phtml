<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product description template
 *
 * @see Mage_Catalog_Block_Product_View_Description
 */
?>
<?php
function printGroupAttributes($groupId) {
 $product = Mage::registry('product');
    $attributesCollection = Mage::getResourceModel('catalog/product_attribute_collection');
        $attributesCollection->setAttributeGroupFilter($groupId);
        foreach ($attributesCollection as $attribute) {
       //   echo $attribute->getAttributeCode()."<br/>"; 
	   if($product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product) != "" && $product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product) != "No" && !is_null($product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product))){
	   echo $product->getResource()->getAttribute($attribute->getAttributeCode())->getStoreLabel() ."<br/>";
		  echo $product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product)."<br/><br/>";
      }
	  }
}




function getGroupAttributes($groupId) {
$attributes = array();
 $product = Mage::registry('product');
    $attributesCollection = Mage::getResourceModel('catalog/product_attribute_collection');
        $attributesCollection->setAttributeGroupFilter($groupId);
	
        foreach ($attributesCollection as $attribute) {
       //   echo $attribute->getAttributeCode()."<br/>"; 
	   if($product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product) != "" && $product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product) != "No" && !is_null($product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product))){
	  $text1 = $product->getResource()->getAttribute($attribute->getAttributeCode())->getStoreLabel() ."";
		  $text2 = $product->getResource()->getAttribute($attribute->getAttributeCode())->getFrontend()->getValue($product)."<br/>";
	array_push($attributes, $text1);
array_push($attributes, $text2);
		
      }
	  }
	  return $attributes;
}


    $numbers = array(58, 69, 82, 95, 108, 121, 134);
	/*
   for($i = 0; $i <= count($numbers)-1; $i++){
   printGroupAttributes($numbers[$i]);
   }
	*/
	
    $content = [];
    for($i = 0; $i <= count($numbers)-1; $i++){
//print_r(getGroupAttributes($numbers[$i]));
$attr = getGroupAttributes($numbers[$i]);
	if($attr){
	for($w = 0; $w <= count($attr)-1; $w++){
    if(!in_array($attr[$w], $content)){
	
    array_push($content, $attr[$w]);
    }
}
	
	}
    }

foreach($content as $c){
echo $c."<br>";
}

?>

